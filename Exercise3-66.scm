(define (interleave s1 s2)
  (if (null? s1)
    s2
    (cons-stream (stream-car s1) (interleave s2 (stream-cdr s1)))
  )
)
(define (pairs s t)
  (cons-stream (list (stream-car s) (stream-car t))
    (interleave
      (stream-map (lambda (x) (list (stream-car s) x)) (stream-cdr t))
      (pairs (stream-cdr s) (stream-cdr t))
      )
  )
)
(define integer-pairs (pairs integers integers))
;(display-stream integer-pairs)
;pair(1,100) is the 198th pair in the stream
(define (nth-of-pair i j)
      (cond ((= i j) (- (expt 2 i) 1))
            ((< i j) 
              (- (* (expt 2 i) (- (+ j (/ 1 2)) i)) 1))
            (else (error "second argumeng must greater than or equal to the first argumeng" i j))
      )
)